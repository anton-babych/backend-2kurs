{"ast":null,"code":"import { GridItemComponent } from \"./grid-item.component\";\nimport { NgForOf, NgIf } from \"@angular/common\";\nimport { EmptyGridItemComponent } from \"./empty-grid-item.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/helmet.service\";\n\nfunction GridComponent_div_0_grid_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"grid-item\", 4);\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"item\", item_r4);\n  }\n}\n\nfunction GridComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, GridComponent_div_0_grid_item_1_Template, 1, 1, \"grid-item\", 3);\n    i0.ɵɵelement(2, \"empty-grid-item\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.data);\n  }\n}\n\nfunction GridComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"p\", 6);\n    i0.ɵɵtext(2, \"\\u0422\\u0443\\u0442 \\u043D\\u0456\\u0447\\u043E\\u0433\\u043E \\u043D\\u0435\\u043C\\u0430\\u0454\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let GridComponent = /*#__PURE__*/(() => {\n  class GridComponent {\n    constructor(helmetService) {\n      this.helmetService = helmetService;\n      this.data = [];\n    }\n\n    ngOnInit() {\n      this.helmetService.read().subscribe(x => {\n        this.data = x;\n      });\n      this.helmetService.data$.subscribe(data => {\n        this.data = data;\n      });\n    }\n\n  }\n\n  GridComponent.ɵfac = function GridComponent_Factory(t) {\n    return new (t || GridComponent)(i0.ɵɵdirectiveInject(i1.HelmetService));\n  };\n\n  GridComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GridComponent,\n    selectors: [[\"grid\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[\"class\", \"grid\", 4, \"ngIf\", \"ngIfElse\"], [\"empty\", \"\"], [1, \"grid\"], [3, \"item\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\"], [1, \"empty-container\"], [1, \"empty-container__text\"]],\n    template: function GridComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, GridComponent_div_0_Template, 3, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, GridComponent_ng_template_1_Template, 3, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n\n        i0.ɵɵproperty(\"ngIf\", ctx.data)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [GridItemComponent, NgForOf, NgIf, EmptyGridItemComponent],\n    styles: [\".grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fill,minmax(240px,1fr));grid-template-rows:repeat(auto-fill,auto);grid-gap:1px;justify-content:center}\"],\n    changeDetection: 0\n  });\n  return GridComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}