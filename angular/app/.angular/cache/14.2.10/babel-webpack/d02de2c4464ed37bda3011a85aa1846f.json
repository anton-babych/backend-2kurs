{"ast":null,"code":"import { ElementRef, EventEmitter } from '@angular/core';\nimport { gsap } from \"gsap\";\nimport { FormComponent } from \"./form.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/helmet.service\";\nconst _c0 = [\"formContainer\"];\nexport let FormContainerComponent = /*#__PURE__*/(() => {\n  class FormContainerComponent {\n    constructor(helmetService) {\n      this.helmetService = helmetService;\n      this.isDone = new EventEmitter();\n      this.isClosed = true;\n    }\n\n    ngAfterViewInit() {\n      this.animate();\n    }\n\n    animate() {\n      let nativeElement = this.formContainerElement.nativeElement;\n      this.isClosed = !this.isClosed;\n\n      if (!this.isClosed) {\n        gsap.fromTo(nativeElement, {\n          xPercent: -100\n        }, {\n          xPercent: 0\n        });\n      } else {\n        gsap.fromTo(nativeElement, {\n          xPercent: 0\n        }, {\n          xPercent: 100,\n          onComplete: () => {\n            this.isDone.emit();\n          }\n        });\n      }\n    }\n\n    onFormEdited(item) {\n      this.item = item;\n      this.helmetService.updateById(item);\n      this.animate();\n    }\n\n    onFormCreated(item) {\n      this.helmetService.create(item);\n      this.animate();\n    }\n\n    onFormDeleted(item) {\n      this.helmetService.delete(item);\n      this.animate();\n    }\n\n    onFormClosed() {\n      this.animate();\n    }\n\n  }\n\n  FormContainerComponent.ɵfac = function FormContainerComponent_Factory(t) {\n    return new (t || FormContainerComponent)(i0.ɵɵdirectiveInject(i1.HelmetService));\n  };\n\n  FormContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormContainerComponent,\n    selectors: [[\"form-container\"]],\n    viewQuery: function FormContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formContainerElement = _t.first);\n      }\n    },\n    inputs: {\n      item: \"item\"\n    },\n    outputs: {\n      isDone: \"isDone\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"form-container\"], [1, \"form-container__content\"], [\"formContainer\", \"\"], [3, \"item\", \"itemEdited\", \"itemCreated\", \"itemDeleted\", \"formClosed\"]],\n    template: function FormContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1, 2)(3, \"item-form\", 3);\n        i0.ɵɵlistener(\"itemEdited\", function FormContainerComponent_Template_item_form_itemEdited_3_listener($event) {\n          return ctx.onFormEdited($event);\n        })(\"itemCreated\", function FormContainerComponent_Template_item_form_itemCreated_3_listener($event) {\n          return ctx.onFormCreated($event);\n        })(\"itemDeleted\", function FormContainerComponent_Template_item_form_itemDeleted_3_listener($event) {\n          return ctx.onFormDeleted($event);\n        })(\"formClosed\", function FormContainerComponent_Template_item_form_formClosed_3_listener() {\n          return ctx.onFormClosed();\n        });\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"item\", ctx.item);\n      }\n    },\n    dependencies: [FormComponent],\n    styles: [\".form-container[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;left:0;z-index:20}.form-container__button-wrapper[_ngcontent-%COMP%]{position:relative;display:block;z-index:100;cursor:pointer}.form-container__button[_ngcontent-%COMP%]{position:absolute;right:0;top:0;width:10%;aspect-ratio:1;background-image:url(/assets/icons/editIcon.png);background-repeat:no-repeat;background-size:cover;background-position:center;transition:all 1s}.form-container__button[_ngcontent-%COMP%]:hover{transform:rotateY(359deg)}@keyframes fromLeft{0%{left:-100%}}\"],\n    changeDetection: 0\n  });\n  return FormContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}