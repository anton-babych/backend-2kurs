{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { gsap } from \"gsap\";\nimport { Types } from \"../../enums/TYPES\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/armor.service\";\nimport * as i2 from \"../../services/helmet.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../components/form/form.component\";\nconst _c0 = [\"formContainer\"];\n\nfunction FormContainerComponent_item_form_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"item-form\", 6);\n    i0.ɵɵlistener(\"itemEdited\", function FormContainerComponent_item_form_5_Template_item_form_itemEdited_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onFormEdited($event));\n    })(\"itemCreated\", function FormContainerComponent_item_form_5_Template_item_form_itemCreated_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onFormCreated($event));\n    })(\"itemDeleted\", function FormContainerComponent_item_form_5_Template_item_form_itemDeleted_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onFormDeleted($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"item\", ctx_r1.item);\n  }\n}\n\nexport let FormContainerComponent = /*#__PURE__*/(() => {\n  class FormContainerComponent {\n    constructor(armorService, helmetService) {\n      this.showForm = false;\n      this.isClosed = true;\n      this.service = this.type === Types.ARMORS ? armorService : helmetService;\n    }\n\n    ngOnInit() {}\n\n    onFormClick() {\n      console.log(\"form openeed\");\n      let nativeElement = this.formContainerElement.nativeElement;\n      this.isClosed = !this.isClosed;\n      this.showForm = true;\n\n      if (!this.isClosed) {\n        gsap.fromTo(nativeElement, {\n          xPercent: -100\n        }, {\n          xPercent: 0,\n          onComplete: () => {\n            this.showForm = !this.isClosed;\n          }\n        });\n      } else {\n        gsap.fromTo(nativeElement, {\n          xPercent: 0\n        }, {\n          xPercent: 100,\n          onComplete: () => {\n            this.showForm = !this.isClosed;\n          }\n        });\n      }\n    }\n\n    onFormEdited(item) {\n      this.item = item;\n      this.service.updateById(item);\n      this.onFormClick();\n    }\n\n    onFormCreated(item) {\n      this.service.create(item);\n      this.onFormClick();\n    }\n\n    onFormDeleted(item) {\n      this.service.delete(item);\n      this.onFormClick();\n    }\n\n  }\n\n  FormContainerComponent.ɵfac = function FormContainerComponent_Factory(t) {\n    return new (t || FormContainerComponent)(i0.ɵɵdirectiveInject(i1.ArmorService), i0.ɵɵdirectiveInject(i2.HelmetService));\n  };\n\n  FormContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormContainerComponent,\n    selectors: [[\"form-container\"]],\n    viewQuery: function FormContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formContainerElement = _t.first);\n      }\n    },\n    inputs: {\n      item: \"item\",\n      type: \"type\"\n    },\n    decls: 6,\n    vars: 1,\n    consts: [[1, \"form-container\"], [1, \"form-container__button-wrapper\", 3, \"click\"], [1, \"form-container__button\"], [1, \"form-container__content\"], [\"formContainer\", \"\"], [3, \"item\", \"itemEdited\", \"itemCreated\", \"itemDeleted\", 4, \"ngIf\"], [3, \"item\", \"itemEdited\", \"itemCreated\", \"itemDeleted\"]],\n    template: function FormContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵlistener(\"click\", function FormContainerComponent_Template_div_click_1_listener() {\n          return ctx.onFormClick();\n        });\n        i0.ɵɵelement(2, \"a\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3, 4);\n        i0.ɵɵtemplate(5, FormContainerComponent_item_form_5_Template, 1, 1, \"item-form\", 5);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.showForm);\n      }\n    },\n    dependencies: [i3.NgIf, i4.FormComponent],\n    styles: [\".form-container[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;left:0;z-index:20}.form-container__button-wrapper[_ngcontent-%COMP%]{position:relative;display:block;z-index:100;cursor:pointer}.form-container__button[_ngcontent-%COMP%]{position:absolute;right:0;top:0;width:10%;aspect-ratio:1;background-image:url(/assets/icons/editIcon.png);background-repeat:no-repeat;background-size:cover;background-position:center;transition:all 1s}.form-container__button[_ngcontent-%COMP%]:hover{transform:rotateY(359deg)}@keyframes fromLeft{0%{left:-100%}}\"]\n  });\n  return FormContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}