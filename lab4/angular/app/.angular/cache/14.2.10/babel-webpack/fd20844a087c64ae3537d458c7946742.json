{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { catchError, Observable, of, tap, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ItemService = /*#__PURE__*/(() => {\n  class ItemService {\n    constructor(http) {\n      this.http = http;\n      this.data = [];\n    }\n\n    read() {\n      if (this.data.length) {\n        return of(this.data);\n      }\n\n      return this.http.get(`http://localhost:8080/api/${this.dataPath}`).pipe(tap(payload => {\n        this.data = payload;\n      }), catchError(this.handleError));\n    }\n\n    updateById(item) {\n      // this.read().subscribe(x => {\n      //   x.find((x, index) => {\n      //     if(x.id === item.id){\n      //       this.data[index] = item;\n      //     }\n      //   })\n      // })\n      const headers = new HttpHeaders(); //headers.append('Content-Type', 'application/json');\n\n      headers.append('Access-Control-Allow-Origin', '*');\n      headers.append('Access-Control-Allow-Methods', 'GET, POST, PATCH, PUT, DELETE, OPTIONS');\n      headers.append('Access-Control-Allow-Headers', 'Origin, Content-Type, X-Auth-Token');\n      let body = JSON.stringify(item);\n      return this.http.put(`http://localhost:8080/api/${this.dataPath}`, body, {\n        headers: headers\n      }).pipe(catchError(this.handleError));\n    }\n\n    handleError(err) {\n      if (err.error instanceof ErrorEvent) {\n        console.log('client', err.message);\n      } else {\n        console.log('server', err.status);\n      }\n\n      return throwError(() => new Error(err.message));\n    }\n\n  }\n\n  ItemService.ɵfac = function ItemService_Factory(t) {\n    return new (t || ItemService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ItemService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ItemService,\n    factory: ItemService.ɵfac,\n    providedIn: 'root'\n  });\n  return ItemService;\n})();","map":null,"metadata":{},"sourceType":"module"}